import { expect, test } from "@jest/globals";
import Day19 from "../solutions/lib/day19";

const helpers = require("../solutions/lib/helpers.ts");

test("SolveFirstStar", () => {
	helpers.which.env = "test";
	helpers.clearDebug();

	const lib = new Day19();

	let lines: string[] = [];
	lines.push("--- scanner 0 ---");
	lines.push("404,-588,-901");
	lines.push("528,-643,409");
	lines.push("-838,591,734");
	lines.push("390,-675,-793");
	lines.push("-537,-823,-458");
	lines.push("-485,-357,347");
	lines.push("-345,-311,381");
	lines.push("-661,-816,-575");
	lines.push("-876,649,763");
	lines.push("-618,-824,-621");
	lines.push("553,345,-567");
	lines.push("474,580,667");
	lines.push("-447,-329,318");
	lines.push("-584,868,-557");
	lines.push("544,-627,-890");
	lines.push("564,392,-477");
	lines.push("455,729,728");
	lines.push("-892,524,684");
	lines.push("-689,845,-530");
	lines.push("423,-701,434");
	lines.push("7,-33,-71");
	lines.push("630,319,-379");
	lines.push("443,580,662");
	lines.push("-789,900,-551");
	lines.push("459,-707,401");
	lines.push("");
	lines.push("--- scanner 1 ---");
	lines.push("686,422,578");
	lines.push("605,423,415");
	lines.push("515,917,-361");
	lines.push("-336,658,858");
	lines.push("95,138,22");
	lines.push("-476,619,847");
	lines.push("-340,-569,-846");
	lines.push("567,-361,727");
	lines.push("-460,603,-452");
	lines.push("669,-402,600");
	lines.push("729,430,532");
	lines.push("-500,-761,534");
	lines.push("-322,571,750");
	lines.push("-466,-666,-811");
	lines.push("-429,-592,574");
	lines.push("-355,545,-477");
	lines.push("703,-491,-529");
	lines.push("-328,-685,520");
	lines.push("413,935,-424");
	lines.push("-391,539,-444");
	lines.push("586,-435,557");
	lines.push("-364,-763,-893");
	lines.push("807,-499,-711");
	lines.push("755,-354,-619");
	lines.push("553,889,-390");
	lines.push("");
	lines.push("--- scanner 2 ---");
	lines.push("649,640,665");
	lines.push("682,-795,504");
	lines.push("-784,533,-524");
	lines.push("-644,584,-595");
	lines.push("-588,-843,648");
	lines.push("-30,6,44");
	lines.push("-674,560,763");
	lines.push("500,723,-460");
	lines.push("609,671,-379");
	lines.push("-555,-800,653");
	lines.push("-675,-892,-343");
	lines.push("697,-426,-610");
	lines.push("578,704,681");
	lines.push("493,664,-388");
	lines.push("-671,-858,530");
	lines.push("-667,343,800");
	lines.push("571,-461,-707");
	lines.push("-138,-166,112");
	lines.push("-889,563,-600");
	lines.push("646,-828,498");
	lines.push("640,759,510");
	lines.push("-630,509,768");
	lines.push("-681,-892,-333");
	lines.push("673,-379,-804");
	lines.push("-742,-814,-386");
	lines.push("577,-820,562");
	lines.push("");
	lines.push("--- scanner 3 ---");
	lines.push("-589,542,597");
	lines.push("605,-692,669");
	lines.push("-500,565,-823");
	lines.push("-660,373,557");
	lines.push("-458,-679,-417");
	lines.push("-488,449,543");
	lines.push("-626,468,-788");
	lines.push("338,-750,-386");
	lines.push("528,-832,-391");
	lines.push("562,-778,733");
	lines.push("-938,-730,414");
	lines.push("543,643,-506");
	lines.push("-524,371,-870");
	lines.push("407,773,750");
	lines.push("-104,29,83");
	lines.push("378,-903,-323");
	lines.push("-778,-728,485");
	lines.push("426,699,580");
	lines.push("-438,-605,-362");
	lines.push("-469,-447,-387");
	lines.push("509,732,623");
	lines.push("647,635,-688");
	lines.push("-868,-804,481");
	lines.push("614,-800,639");
	lines.push("595,780,-596");
	lines.push("");
	lines.push("--- scanner 4 ---");
	lines.push("727,592,562");
	lines.push("-293,-554,779");
	lines.push("441,611,-461");
	lines.push("-714,465,-776");
	lines.push("-743,427,-804");
	lines.push("-660,-479,-426");
	lines.push("832,-632,460");
	lines.push("927,-485,-438");
	lines.push("408,393,-506");
	lines.push("466,436,-512");
	lines.push("110,16,151");
	lines.push("-258,-428,682");
	lines.push("-393,719,612");
	lines.push("-211,-452,876");
	lines.push("808,-476,-593");
	lines.push("-575,615,604");
	lines.push("-485,667,467");
	lines.push("-680,325,-822");
	lines.push("-627,-443,-432");
	lines.push("872,-547,-609");
	lines.push("833,512,582");
	lines.push("807,604,487");
	lines.push("839,-516,451");
	lines.push("891,-625,532");
	lines.push("-652,-548,-490");
	lines.push("30,-46,-14");

	expect(lib.solveForFirstStar(lines)).toBe(79);
});

test("SolveSecondStar", () => {
	helpers.which.env = "test";
	const lib = new Day19();

	let lines: string[] = [];
	lines.push("--- scanner 0 ---");
	lines.push("404,-588,-901");
	lines.push("528,-643,409");
	lines.push("-838,591,734");
	lines.push("390,-675,-793");
	lines.push("-537,-823,-458");
	lines.push("-485,-357,347");
	lines.push("-345,-311,381");
	lines.push("-661,-816,-575");
	lines.push("-876,649,763");
	lines.push("-618,-824,-621");
	lines.push("553,345,-567");
	lines.push("474,580,667");
	lines.push("-447,-329,318");
	lines.push("-584,868,-557");
	lines.push("544,-627,-890");
	lines.push("564,392,-477");
	lines.push("455,729,728");
	lines.push("-892,524,684");
	lines.push("-689,845,-530");
	lines.push("423,-701,434");
	lines.push("7,-33,-71");
	lines.push("630,319,-379");
	lines.push("443,580,662");
	lines.push("-789,900,-551");
	lines.push("459,-707,401");
	lines.push("");
	lines.push("--- scanner 1 ---");
	lines.push("686,422,578");
	lines.push("605,423,415");
	lines.push("515,917,-361");
	lines.push("-336,658,858");
	lines.push("95,138,22");
	lines.push("-476,619,847");
	lines.push("-340,-569,-846");
	lines.push("567,-361,727");
	lines.push("-460,603,-452");
	lines.push("669,-402,600");
	lines.push("729,430,532");
	lines.push("-500,-761,534");
	lines.push("-322,571,750");
	lines.push("-466,-666,-811");
	lines.push("-429,-592,574");
	lines.push("-355,545,-477");
	lines.push("703,-491,-529");
	lines.push("-328,-685,520");
	lines.push("413,935,-424");
	lines.push("-391,539,-444");
	lines.push("586,-435,557");
	lines.push("-364,-763,-893");
	lines.push("807,-499,-711");
	lines.push("755,-354,-619");
	lines.push("553,889,-390");
	lines.push("");
	lines.push("--- scanner 2 ---");
	lines.push("649,640,665");
	lines.push("682,-795,504");
	lines.push("-784,533,-524");
	lines.push("-644,584,-595");
	lines.push("-588,-843,648");
	lines.push("-30,6,44");
	lines.push("-674,560,763");
	lines.push("500,723,-460");
	lines.push("609,671,-379");
	lines.push("-555,-800,653");
	lines.push("-675,-892,-343");
	lines.push("697,-426,-610");
	lines.push("578,704,681");
	lines.push("493,664,-388");
	lines.push("-671,-858,530");
	lines.push("-667,343,800");
	lines.push("571,-461,-707");
	lines.push("-138,-166,112");
	lines.push("-889,563,-600");
	lines.push("646,-828,498");
	lines.push("640,759,510");
	lines.push("-630,509,768");
	lines.push("-681,-892,-333");
	lines.push("673,-379,-804");
	lines.push("-742,-814,-386");
	lines.push("577,-820,562");
	lines.push("");
	lines.push("--- scanner 3 ---");
	lines.push("-589,542,597");
	lines.push("605,-692,669");
	lines.push("-500,565,-823");
	lines.push("-660,373,557");
	lines.push("-458,-679,-417");
	lines.push("-488,449,543");
	lines.push("-626,468,-788");
	lines.push("338,-750,-386");
	lines.push("528,-832,-391");
	lines.push("562,-778,733");
	lines.push("-938,-730,414");
	lines.push("543,643,-506");
	lines.push("-524,371,-870");
	lines.push("407,773,750");
	lines.push("-104,29,83");
	lines.push("378,-903,-323");
	lines.push("-778,-728,485");
	lines.push("426,699,580");
	lines.push("-438,-605,-362");
	lines.push("-469,-447,-387");
	lines.push("509,732,623");
	lines.push("647,635,-688");
	lines.push("-868,-804,481");
	lines.push("614,-800,639");
	lines.push("595,780,-596");
	lines.push("");
	lines.push("--- scanner 4 ---");
	lines.push("727,592,562");
	lines.push("-293,-554,779");
	lines.push("441,611,-461");
	lines.push("-714,465,-776");
	lines.push("-743,427,-804");
	lines.push("-660,-479,-426");
	lines.push("832,-632,460");
	lines.push("927,-485,-438");
	lines.push("408,393,-506");
	lines.push("466,436,-512");
	lines.push("110,16,151");
	lines.push("-258,-428,682");
	lines.push("-393,719,612");
	lines.push("-211,-452,876");
	lines.push("808,-476,-593");
	lines.push("-575,615,604");
	lines.push("-485,667,467");
	lines.push("-680,325,-822");
	lines.push("-627,-443,-432");
	lines.push("872,-547,-609");
	lines.push("833,512,582");
	lines.push("807,604,487");
	lines.push("839,-516,451");
	lines.push("891,-625,532");
	lines.push("-652,-548,-490");
	lines.push("30,-46,-14");

	expect(lib.solveForSecondStar(lines)).toBe(3_621);
});
